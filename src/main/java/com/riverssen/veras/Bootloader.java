package com.riverssen.veras;

import java.io.ByteArrayOutputStream;
import java.io.IOException;

import static com.riverssen.veras.KernelImpl.*;

public class Bootloader {
    public static final byte[] generateBootloader() throws IOException {
        ByteArrayOutputStream instructions = new ByteArrayOutputStream();
        String os_vs =  "////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n" +
                        "///////////////////////////////////////////////////////////////////////////////////VERA OS V1///////////////////////////////////////////////////////////////////////////////////\n" +
                        "////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n" +
                "\n" +
                "\n" +
                "\n" +
                "Created By: https://github.com/Hammurabi\n" +
                "Copyright 2019\n\n\n\n" +
                "" +
                "////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n" +
                "////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n" +
                "////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n"
                ;
        short os_vsl = (short) os_vs.length();

        instructions.write(OP_APUSH);
        instructions.write(new byte[]{ (byte) (((os_vsl) >> 8) & 0xFF), (byte) (((os_vsl)) & 0xFF)});
        instructions.write(os_vs.getBytes());
        instructions.write(OP_PRINT);

        instructions.write(OP_PUSH);
        instructions.write(new byte[] {1, 0, 0, 0});
        instructions.write(OP_CALL);

        return instructions.toByteArray();
    }
}
